{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","alt","message","like","maxLength10","maxLength","AddNewPostForm","React","memo","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","ReduxAddNewPostForm","reduxForm","form","MyPosts","postItem","postData","map","mes","key","id","postsDescr","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreater","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","PureComponent","ProfileInfo","profile","descrBlock","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","history","push","setUserProfile","getStatus","Component","compose","getProfile","isAuth","getIsAuth","takeStatus","authorizedUserId","getAuthorizedUserId","withRouter"],"mappings":"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","file":"static/js/3.49d18ca9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descrBlock\":\"ProfileInfo_descrBlock__2G3sG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__ktHv9\",\"postsDescr\":\"MyPosts_postsDescr__5txEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3cDMg\"};","import React from 'react';\nimport style from './Post.module.css';\n\nconst Post = (props) => {\n    return(\n      <div className={style.item}>\n        <img src=\"https://media.comicbook.com/2018/05/avatar-the-last-airbender-blu-ray-set-1111431.jpeg\" alt=\"\"/>\n        <div>\n          {props.message}\n        </div>\n        <div>\n          Like {props.like}\n        </div>\n      </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLength } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormControls/FormControls';\n\nconst maxLength10 = maxLength(10);\n\nconst AddNewPostForm = React.memo((props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\n        {/* <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} /> */}\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n})\n\nconst ReduxAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nconst MyPosts = (props) => {\n  let postItem = props.postData.map(mes => <Post key={mes.id} message={mes.message} like={mes.like} />);\n\n  // let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={style.postsDescr}>\n      <h3>My posts</h3>\n        <ReduxAddNewPostForm onSubmit={onAddPost} />\n      <div className={style.item}>\n        {postItem}\n      </div>\n    </div>\n  )\n}\n\n// const MyPostsRedux = reduxForm({\n//   form: 'posts'\n// })(MyPosts);\n\n// const myPostsForm = (props) => {\n//   const onSubmit = (formData) => {\n//     console.log(formData);\n//   }\n\n//   return (\n//     <div>\n//       <h4>New posts</h4>\n//       <MyPostsRedux onSubmit={onSubmit} />\n//     </div>\n//   )\n// }\n\nexport default MyPosts;","import React from 'react';\nimport { addPostActionCreater, updateNewPostTextactionCreater } from '../../../redux/propfileReduser';\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\n\n\n// const MyPostsContainer = (props) => {\n//   let state = props.store.getState();\n\n//   let addPost = () => {\n//     props.store.dispatch( addPostActionCreater() );\n//   };\n\n  // let onPostChange = (text) => {\n  //   let action = updateNewPostTextactionCreater(text);\n  //   props.store.dispatch( action )\n  // };\n\n//   return(<MyPosts updateNewPostText={onPostChange} addPost={addPost} postData={state.profilePage.postData} newPostText={state.profilePage.newPostText} />);\n// };\n\nlet mapStateToProps = (state) => {\n  return{\n    postData: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return{\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreater(newPostText));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport style from './ProfileInfo.module.css';\n\nclass ProfileStatus extends React.PureComponent{\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    // this.activateEditMode = this.activateEditMode.bind(this);\n    // this.deactivateEditMode = this.deactivateEditMode.bind(this);\n\n    activateEditMode = () => {\n        this.setState({ // setState - асинхронен\n            editMode: true\n        })\n    }\n\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={this.activateEditMode}>\n                            {this.props.status || \"No status\"}\n                        </span>\n                    </div>\n                }\n\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport style from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus';\n// import ProfileStatusWithHook from './ProfileStatusWithHook';\n\nconst ProfileInfo = React.memo(({profile, status, updateStatus}) => {\n  if(!profile) {\n    return <Preloader />\n  }\n\n  return(\n    <div>\n      <div>\n        <img src=\"https://png.pngtree.com/back_origin_pic/00/09/01/cbe0026ede51bf3b24b61f4d99394066.jpg\" alt=\"fon\"  />\n      </div>\n      <div className={style.descrBlock}>\n        <img src={profile.photos.large} />\n        <ProfileStatus status={status} updateStatus={updateStatus} />\n        {/* <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus} /> */}\n      </div>\n    </div>\n  )\n})\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return(\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { setUserProfile, getStatus, updateStatus } from '../../redux/propfileReduser';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getProfile,\n        getIsAuth,\n        takeStatus,\n        getAuthorizedUserId } from '../../redux/usersSelectors';\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        \n        if(!userId) {\n            // userId = this.props.authorizedUserId;\n            userId = 5133;\n            if(!userId) {\n                this.props.history.push('/login');\n            }\n        }\n\n        this.props.setUserProfile(userId);\n        this.props.getStatus(userId);\n        \n        // usersAPI.getUserProfile(userId)\n        // .then(data => {\n        //     this.props.setUserProfile(data);\n        // })\n\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n        // .then(response => {\n        //     this.props.setUserProfile(response.data);\n        // });\n    }\n\n    render() {\n        return(\n            <div>\n                <Profile {...this.props} profile={this.props.profile}\n                                        status={this.props.status}\n                                        updateStatus={this.props.updateStatus} />\n            </div>\n        )\n    }\n}\n\n// Это НОС\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\n//     (props) => {\n//     if(!props.isAuth) return <Redirect to={\"/login\"} />\n//     return <ProfileContainer {...props} />\n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: getProfile(state),\n        isAuth: getIsAuth(state),\n        status: takeStatus(state),\n        authorizedUserId: getAuthorizedUserId(state)\n    }\n}\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\n\nexport default compose(\n    connect(mapStateToProps, {\n        setUserProfile,\n        getStatus,\n        updateStatus\n    }),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer);\n\n// export default connect(mapStateToProps, {\n//     setUserProfile\n// })(WithUrlDataContainerComponent);"],"sourceRoot":""}